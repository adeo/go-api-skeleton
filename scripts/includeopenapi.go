package main

import (
	"io/ioutil"
	"log"
	"os"
	"regexp"
	"text/template"
	"time"
)

func main() {
	backtickRe := regexp.MustCompile("`([^`]+)`")

	b, _ := ioutil.ReadFile("openapi.yaml")
	bEscaped := backtickRe.ReplaceAllString(string(b), "` + \"`$1`\" + `")

	out, _ := os.Create("api/openapi.go")

	t := template.New("openapi")
	text := `
// Code generated by go generate; DO NOT EDIT.
// This file was generated by scripts/includeopenapi.go at
// {{ .Timestamp }}

package api

const (
	OpenAPISchema = ` + "`" + `
{{ .Schema }}
` + "`" + `
)
`
	_, err := t.Parse(text)
	if err != nil {
		log.Fatal("error while parsing openapi handler")
	}

	err = t.Execute(out, struct {
		Schema    string
		Timestamp time.Time
	}{
		Timestamp: time.Now(),
		Schema:    bEscaped,
	})
	if err != nil {
		log.Fatal("error while generating openapi handler")
	}
}
